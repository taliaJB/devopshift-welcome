pipeline {
    agent any
    environment {
        CREDENTIALS_ID = 'dh_proj'
        DOCKER_FILE = 'Dockerfile'
        IMAGE_NAME = 'reviews'
        REPO = 'taliadh'
        VERSION = "v${env.BUILD_NUMBER}"
        WORK_DIR = "welcome/app/bookinfo/src/${IMAGE_NAME}/"
        SNYK_TOKEN = "${env.SNYK_TOKEN}"
    }
    stages {
        stage('Build') {
            steps {
                script {
                    sh "docker build -f ${WORK_DIR}${DOCKER_FILE} --target build --tag ${IMAGE_NAME}:${VERSION}-build ${WORK_DIR}"
                }
            }
        }
        stage('Secure') {
            steps {
                script {
                    sh '''
                    docker build --target secure --build-arg SNYK_TOKEN=${SNYK_TOKEN} --tag ${IMAGE_NAME}:${VERSION}-secure ${WORK_DIR}'
                    docker run --rm ${IMAGE_NAME}:${VERSION}-secure'
                    '''
                }
            }
        }
        stage('Run') {
            steps {
                script {
                    sh "docker build -f ${WORK_DIR}${DOCKER_FILE} --target run --tag ${REPO}/${IMAGE_NAME}:${VERSION} ${WORK_DIR}"
                }
            }
        }
        stage('Push') {
            steps {
                script {
                    docker.withRegistry('', "${CREDENTIALS_ID}") {
                        sh '''
                        docker tag ${REPO}/${IMAGE_NAME}:${VERSION} ${REPO}/${IMAGE_NAME}:latest
                        docker push ${REPO}/${IMAGE_NAME}:${VERSION}
                        docker push ${REPO}/${IMAGE_NAME}:latest
                        '''
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Docker image build, security check, and push successful!'
        }
        failure {
            echo 'Docker image build, security check, or push failed.'
        }
    }
}
